name: Auto Parse github form - master
run-name: ${{ github.actor }} - issue:${{ github.event.issue.number }}
on:
  issues:
    types:
      - opened
      - edited
      - labeled
      - reopened
  workflow_dispatch:
env:
  GH_TOKEN: ${{ secrets.PLATFORM_USER_TOKEN }}
  GH_REPO: ${{ github.repository }}
  NUMBER: ${{ github.event.issue.number }}
permissions:
  id-token: write

jobs:
  process-request:
    permissions: write-all
    runs-on: ubuntu-latest
    if: github.event.issue.user.login != 'renovate[bot]' && github.actor != 'hmcts-platform-operations' && !contains(github.event.issue.labels.*.name, 'cancel') && !contains(github.event.issue.labels.*.name, 'pull-request')
    steps:
      #Allows workflow to access repo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          # token: ${{ env.GH_TOKEN }}
      #Get issue body
      - name: Get issue body
        id: get_issue_body
        run: |
          gh issue view --repo thomasthorntoncloud/test-auto-shutdown ${{ github.event.issue.number }} --json body | jq -r '.body' > body.txt
          sed -i "s/'//g" body.txt 
          cat body.txt
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Extract dates and exclusion
        id: extract_values
        run: |
          START_DATE=$(sed -n '/^### Skip shutdown start date/,/^###/p' body.txt | tail -n +2 | head -n -1 | tr -d '[:space:]')
          END_DATE=$(sed -n '/^### Skip shutdown end date/,/^###/p' body.txt | tail -n +2 | head -n -1 | tr -d '[:space:]')
          PAST_11PM=$(sed -n '/^### Do you need this exclusion past 11pm?/,$p' body.txt | tail -n +2 | sed '/^###/d' | xargs)
          
          echo "start_date=$START_DATE" >> $GITHUB_OUTPUT
          echo "end_date=$END_DATE" >> $GITHUB_OUTPUT
          echo "past_11pm=$PAST_11PM" >> $GITHUB_OUTPUT

          # Update project fields
          gh project item-add 2 --owner thomasthorntoncloud --url ${{ github.event.issue.html_url }} --field "Start Date=$START_DATE" --field "End Date=$END_DATE"

      - name: Use extracted values
        run: |
          echo "Start Date: ${{ steps.extract_values.outputs.start_date }}"
          echo "End Date: ${{ steps.extract_values.outputs.end_date }}"
          echo "Past 11pm: ${{ steps.extract_values.outputs.past_11pm }}"

      #Create a multiline variable so it can be read by parser
      # - name: multiline github var
      #   run: |
      #     echo 'ISSUE_BODY<<EOF' >> $GITHUB_ENV
      #     while read LINE; do
      #     echo "$LINE" >> $GITHUB_ENV;
      #     done < body.txt
      #     echo 'EOF' >> $GITHUB_ENV
      #     rm body.txt
      # #Parse issue form that trigger workflow
      # - name: Read submitted issue
      #   id: parse_issue
      #   uses: stefanbuck/github-issue-parser@v3.1.1
      #   with:
      #     issue-body: ${{ env.ISSUE_BODY }}
      #     template-path: .github/ISSUE_TEMPLATE/3-skip-auto-shutdown-request.yaml
      # #Save parsed date into environment variables
      # - name: Save parsed jsonString data
      #   run: |
      #     echo '${{ steps.parse_issue.outputs.jsonString }}' > NEW_DATA.json
      #     echo NEW_DATA=$(cat NEW_DATA.json | jq -c | jq '.form_environment |= split(",")') >> $GITHUB_ENV
      #     rm NEW_DATA.json
      #     echo GITHUB_REPO='${{ github.repository }}' >> $GITHUB_ENV
      #     echo ISSUE_NUMBER='${{ github.event.issue.number }}' >> $GITHUB_ENV